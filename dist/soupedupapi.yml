swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Api Test Jomon'
  description: 'Api Test Jomon'

schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      summary: Search for Users
      description: Returns Users.
      tags:
        - Users
      responses:
        200:
          description: All Users objects, limited by any query parameters.
          schema:
            type: array
            items:
              $ref: "#/definitions/users"
    post:
      summary: Creates a User object.
      description: Adds a new User object to the User list.
      parameters:
        - $ref: "#/parameters/users"
      tags:
        - User
      responses:
        201:
          description: User object successfully created
          headers:
            Location:
              type: string
              format: path-absolute
              description: Path to the User, e.g. "/users/1234"
          schema:
            $ref: "#/definitions/users"
        400:
          description: User could not be created due to client error. See body for details.

  /users/{userID}:
    parameters:
      - name: userID
        in: path
        required: true
        type: string
    get:
      summary: Get User object by User ID.
      description: Returns a user object.
      tags:
        - User
      responses:
        200:
          description: User object.
          schema:
            $ref: "#/definitions/users"
        404:
          description: A User with this ID does not exist.
    put:
      summary: Update an existing User object.
      description: Update an existing User object. Optimistic locking with ETag and If-Match.
      parameters:
        - $ref: "#/parameters/users"
      tags:
        - User
      responses:
        204:
          description: User successfully updated.
        400:
          description: User could not be updated due to client error. See body for details.
        404:
          description: User for provided ID could not be found, therefore could not be updated.
        412:
          description: User could not be updated due to missing If-Match header.

    delete:
      summary: Delete an existing User object.
      description: Delete an existing User object If-Match.
      tags:
        - User
      responses:
        204:
          description: User successfully deleted.
        404:
          description: User for provided ID could not be found, therefore could not be deleted.
        412:
          description: User could not be deleted due to missing If-Match header.


definitions:
  users:
    properties:
      id:
        type: number
      first_name:
        type: string
      last_name:
        type: string
      avatar:
        type: string

parameters:
  users:
    name: users
    in: body
    description: The User object to create/update.
    schema:
      $ref: "#/definitions/users"
# Added by API Auto Mocking Plugin
host: reqres.in
basePath: /api
